apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ort.edu.helloworld"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 3
        versionName System.env.VERSION_NAME ?: "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
    release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        ext.config = getProps('../config/release.properties')
        ext.config.each { p ->
            if(p.key == "APPNAME"){
                resValue "string","app_name", p.value
            }
            else if(p.key=="APPLICATION_ID_SUFFIX"){
                applicationIdSuffix p.value
            }else
                buildConfigField 'String', p.key, p.value
        }


    }
    staging {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        ext.config = getProps('../config/staging.properties')
        ext.config.each { p ->
            if (p.key == "APPNAME") {
                resValue "string", "app_name", p.value.replace('"', '')
            } else if (p.key == "APPLICATION_ID_SUFFIX") {
                applicationIdSuffix p.value
            } else {
                buildConfigField 'String', p.key, p.value//.replace('"','')
            }
        }
    }

    debug {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        ext.config = getProps('../config/debug.properties')
        ext.config.each { p ->
            if (p.key == "APPNAME") {
                resValue "string", "app_name", p.value
            } else if (p.key == "APPLICATION_ID_SUFFIX") {
                applicationIdSuffix p.value
            } else
                buildConfigField 'String', p.key, p.value

        }
    }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
def getProps(path) {
   Properties props = new Properties()
   props.load(new FileInputStream(file(path)))
   return props
}
